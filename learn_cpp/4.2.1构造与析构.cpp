//#include<iostream>
//#include<string>
//using namespace std;
//
////构造和析构都是必须有的实现，若不自己写，编译器会提供一个空实现
//class Person
//{
//public:
//	//构造函数：类名（）{}
//	//1.没有返回值，也不写void
//	//2.函数名称与类名相同
//	//3.构造函数可以有参数，因此可以发生重载
//	//4.程序在调用对象时候会自动调用构造，无需手动调用，且只调用一次
//	Person()
//	{
//		cout << "Person 的构造函数调用" << endl;
//	}
//
//
//	//析构函数：~类名（）{}
//	//1.没有返回值，也不写void
//	//2.函数名称为类名前+ ‘~’
//	//3.析构函数不可以有参数，因此不可以重载
//	//4.程序在对象销毁前会自动调用析构，无须手动调用，且只调用一次
//	~Person()
//	{
//		cout << "Person 的析构函数调用" << endl;
//	}
//};
//
//
//
//void test01()
//{
//	Person p;
//}
//
//int main()
//{
//	Person p;//在return 0；后才实行析构函数
//
//	//test01();//在局部变量被释放时就会执行析构
//
//	system("pause"); 
//	return 0;
//}